# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:
    providers:
        chain_provider:
            chain:
                providers: [fos_userbundle_username, fos_userbundle_email, in_memory]
        fos_userbundle_username:
            id:    jv.username_provider
        fos_userbundle_email:
            id:    jv.email_provider
        in_memory:
            memory:
                users:
                    user:
                        password: 1234
                        roles: 'ROLE_USER'
                    user@example.com:
                        password: 1234
                        roles: 'ROLE_USER'
                    admin:
                        password: admin
                        roles: 'ROLE_APP_ADMIN'
                    dws:
                        password: dws
                        roles: 'ROLE_USER'
        
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: 
            cost: 12
            algorithm: bcrypt

    firewalls:
        main:
            
            pattern: ^/
            anonymous:    true
            form_login:
                provider: chain_provider
                csrf_token_generator: security.csrf.token_manager
                # if you are using Symfony < 2.8, use the following config instead:
                # csrf_provider: form.csrf_provider
                login_path: fos_user_security_login
                check_path: fos_user_security_check
            logout:
                path: fos_user_security_logout
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        my_secured_area:
            anonymous: ~
            http_basic: ~
    
    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_APP_ADMIN]
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    access_control:
        - { path: ^/[a-z]+/index, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/[a-z]+/intranet/log/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/[a-z]+/intranet/log/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/[a-z]+/intranet/log/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/[a-z]+/intranet/project/list, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/project/index, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/project/[0-9]+/show, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/project/[0-9]+/lisbycategory, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/project/listallbycategory, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/project/new, role: ROLE_APP_ADMIN }
        - { path: ^/[a-z]+/intranet/project/[0-9]+/delete, role: ROLE_APP_ADMIN }
        - { path: ^/[a-z]+/intranet/project/[0-9]+/edit, role: ROLE_APP_ADMIN }
        - { path: ^/[a-z]+/intranet/category/list, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/category/index, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/category/[0-9]+/show, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/category/new, role: ROLE_APP_ADMIN }
        - { path: ^/[a-z]+/intranet/category/[0-9]+/delete, role: ROLE_APP_ADMIN }
        - { path: ^/[a-z]+/intranet/category/[0-9]+/edit, role: ROLE_APP_ADMIN }
        - { path: ^/[a-z]+/intranet/type/list, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/type/index, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/type/[0-9]+/show, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/type/new, role: ROLE_APP_ADMIN }
        - { path: ^/[a-z]+/intranet/type/[0-9]+/delete, role: ROLE_APP_ADMIN }
        - { path: ^/[a-z]+/intranet/type/[0-9]+/edit, role: ROLE_APP_ADMIN }
        - { path: ^/[a-z]+/intranet/task/list, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/task/index, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/task/[0-9]+/show, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/task/new, role: ROLE_APP_ADMIN }
        - { path: ^/[a-z]+/intranet/task/[0-9]+/delete, role: ROLE_APP_ADMIN }
        - { path: ^/[a-z]+/intranet/task/[0-9]+/edit, role: ROLE_APP_ADMIN }
        - { path: ^/[a-z]+/intranet/project/[0-9]+/lisbytype, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/project/listallbytype, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/project/[0-9]+/lisbyproject, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/project/listallbyproject, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/project/[0-9]+/lisbyuser, role: [ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/project/listallbyuser, role: [ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/user/list, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/user/index, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/user/[0-9]+/show, role: [ROLE_USER,ROLE_APP_ADMIN] }
        - { path: ^/[a-z]+/intranet/user/new, role: ROLE_APP_ADMIN }
        - { path: ^/[a-z]+/intranet/user/[0-9]+/delete, role: ROLE_APP_ADMIN }
        - { path: ^/[a-z]+/intranet/user/[0-9]+/edit, role: ROLE_APP_ADMIN }




